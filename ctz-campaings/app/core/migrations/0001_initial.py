# Generated by Django 3.2.6 on 2022-07-01 23:22

import autoslug.fields
import core.campaing
import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_id', models.IntegerField()),
                ('title', models.CharField(max_length=80)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='title')),
                ('excerpt', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('img_main', models.ImageField(blank=True, null=True, upload_to=core.campaing.nameFile)),
                ('url_video', models.CharField(blank=True, max_length=250, null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'created'), (2, 'draft'), (3, 'send'), (4, 'approve'), (5, 'public')], default=1)),
                ('currency_id', models.IntegerField(default=1)),
                ('country_id', models.IntegerField(default=1)),
                ('city_id', models.IntegerField(default=1)),
                ('categor_ies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=70), size=None)),
                ('slogan_campaing', models.CharField(max_length=150)),
                ('flag', models.PositiveSmallIntegerField(choices=[(1, 'recent'), (2, 'hot'), (3, 'ended')], default=1)),
                ('start_at', models.DateField(blank=True, null=True)),
                ('ended_at', models.DateField(blank=True, null=True)),
                ('public_at', models.DateField(blank=True, null=True)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('update_at', models.DateField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('type_user', models.PositiveSmallIntegerField(choices=[(1, 'contributor'), (2, 'creator')], default=1)),
                ('is_activate', models.BooleanField(default=True)),
                ('had_company', models.BooleanField(default=False)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('years', models.IntegerField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
